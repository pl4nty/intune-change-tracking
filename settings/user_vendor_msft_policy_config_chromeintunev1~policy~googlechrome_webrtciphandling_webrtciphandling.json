{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "WebRtcIPHandling",
        "The IP handling policy of WebRTC",
        "\\Google\\Google Chrome",
        "Administrative Templates\\Google\\Google Chrome",
        "Google Chrome"
    ],
    "infoUrls": [],
    "baseUri": "./User/Vendor/MSFT/Policy",
    "offsetUri": "/Config/chromeIntuneV1~Policy~googlechrome/WebRtcIPHandling",
    "rootDefinitionId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling",
    "categoryId": "36c83fb3-c18c-472b-b39e-617c2f8a7fbd",
    "settingUsage": "configuration",
    "uxBehavior": "default",
    "visibility": "settingsCatalog,template",
    "id": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling",
    "description": "",
    "helpText": "",
    "name": "WebRtcIPHandling",
    "displayName": "The IP handling policy of WebRTC (User)",
    "defaultOptionId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling_default",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "5.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": null,
        "windowsSkus": [],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling_default",
            "description": null,
            "helpText": null,
            "name": "WebRTC will use all available interfaces when searching for the best path.",
            "displayName": "WebRTC will use all available interfaces when searching for the best path.",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValue",
                "settingValueTemplateReference": null,
                "value": "default"
            },
            "dependentOn": [
                {
                    "dependentOn": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_1",
                    "parentSettingId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling"
                }
            ],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling_default_public_and_private_interfaces",
            "description": null,
            "helpText": null,
            "name": "WebRTC will only use the interface connecting to the public Internet, but may connect using private IP addresses.",
            "displayName": "WebRTC will only use the interface connecting to the public Internet, but may connect using private IP addresses.",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValue",
                "settingValueTemplateReference": null,
                "value": "default_public_and_private_interfaces"
            },
            "dependentOn": [
                {
                    "dependentOn": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_1",
                    "parentSettingId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling"
                }
            ],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling_default_public_interface_only",
            "description": null,
            "helpText": null,
            "name": "WebRTC will only use the interface connecting to the public Internet, and will not connect using private IP addresses.",
            "displayName": "WebRTC will only use the interface connecting to the public Internet, and will not connect using private IP addresses.",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValue",
                "settingValueTemplateReference": null,
                "value": "default_public_interface_only"
            },
            "dependentOn": [
                {
                    "dependentOn": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_1",
                    "parentSettingId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling"
                }
            ],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_webrtciphandling_disable_non_proxied_udp",
            "description": null,
            "helpText": null,
            "name": "WebRTC will use TCP on the public-facing interface, and will only use UDP if supported by a configured proxy.",
            "displayName": "WebRTC will use TCP on the public-facing interface, and will only use UDP if supported by a configured proxy.",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValue",
                "settingValueTemplateReference": null,
                "value": "disable_non_proxied_udp"
            },
            "dependentOn": [
                {
                    "dependentOn": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling_1",
                    "parentSettingId": "user_vendor_msft_policy_config_chromeintunev1~policy~googlechrome_webrtciphandling"
                }
            ],
            "dependedOnBy": []
        }
    ]
}