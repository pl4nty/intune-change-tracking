{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "WebAppSettings",
        "Web App management settings",
        "\\Microsoft Edge",
        "Microsoft Edge"
    ],
    "infoUrls": [],
    "baseUri": "./User/Vendor/MSFT/Policy",
    "offsetUri": "/Config/microsoft_edgev120~Policy~microsoft_edge/WebAppSettings",
    "rootDefinitionId": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings",
    "categoryId": "a25a7a02-4bac-411b-9d02-10cb3297cb17",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "riskLevel": "low",
    "id": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings",
    "description": "This policy allows an admin to specify settings for installed web apps. This policy maps a Web App ID to its specific setting. A default configuration can be set using the special ID *, which applies to all web apps without a custom configuration in this policy.\r\n\r\n- The manifest_id field is the Manifest ID for the Web App.\r\nSee https://developer.chrome.com/blog/pwa-manifest-id/\r\nfor instructions on how to determine the Manifest ID for an installed web app.\r\n- The run_on_os_login field specifies if a web app can be run during OS login.\r\nIf this field is set to blocked, the web app will not run during OS login and the user will not be able to enable this later.\r\nIf this field is set to run_windowed, the web app will run during OS login and the user won't be able to disable this later.\r\nIf this field is set to allowed, the user will be able to configure the web app to run at OS login.\r\nThe default policy configuration only allows the allowed and blocked values.\r\n- (Starting with Microsoft Edge version 120) The prevent_close_after_run_on_os_login field specifies if a web app can be prevented from closing in any way.\r\nFor example, by the user, by task manager, or by web APIs. This behavior can only be enabled if run_on_os_login is set to run_windowed.\r\nIf the app is already running, this setting will only take effect after the app is restarted.\r\nIf this field isn't defined, users can close the app.\r\n(This is currently not supported in Microsoft Edge.)\r\n- (Since version 118) The force_unregister_os_integration field specifies if all OS integration for a web app, that is, shortcuts, file handlers, protocol handlers and so on will be removed or not.\r\nIf an app is already running, this property will come into effect after the app restarts.\r\nThis should be used with caution, since it can override any OS integration that is set automatically during the startup of the web applications system. This currently only works on Windows, Mac and Linux platforms.\r\n\r\nExample value:\r\n\r\n[\r\n  {\r\n    \"manifest_id\": \"https://foo.example/index.html\",\r\n    \"run_on_os_login\": \"allowed\"\r\n  },\r\n  {\r\n    \"manifest_id\": \"https://bar.example/index.html\",\r\n    \"run_on_os_login\": \"allowed\"\r\n  },\r\n  {\r\n    \"manifest_id\": \"https://foobar.example/index.html\",\r\n    \"run_on_os_login\": \"run_windowed\",\r\n    \"prevent_close_after_run_on_os_login\": true\r\n  },\r\n  {\r\n    \"manifest_id\": \"*\",\r\n    \"run_on_os_login\": \"blocked\"\r\n  },\r\n  {\r\n    \"manifest_id\": \"https://foo.example/index.html\",\r\n    \"force_unregister_os_integration\": true\r\n  }\r\n]",
    "helpText": "",
    "name": "WebAppSettings",
    "displayName": "Web App management settings (User)",
    "defaultOptionId": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "5.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": null,
        "windowsSkus": [],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": [
                {
                    "dependedOnBy": "user_vendor_msft_policy_config_microsoft_edgev120~policy~microsoft_edge_webappsettings_webappsettings",
                    "required": true
                }
            ]
        }
    ]
}