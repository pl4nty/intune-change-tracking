{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "AppxRuntimeBlockHostedAppAccessWinRT",
        "Block launching Universal Windows apps with Windows Runtime API access from hosted content.",
        "\\Windows Components\\App runtime",
        "Administrative Templates\\Windows Components\\App runtime",
        "App runtime"
    ],
    "infoUrls": [
        "https://docs.microsoft.com/windows/client-management/mdm/policy-csp-admx-appxruntime#admx-appxruntime-appxruntimeblockhostedappaccesswinrt"
    ],
    "baseUri": "./Device/Vendor/MSFT/Policy",
    "offsetUri": "/Config/ADMX_AppXRuntime/AppxRuntimeBlockHostedAppAccessWinRT",
    "rootDefinitionId": "device_vendor_msft_policy_config_admx_appxruntime_appxruntimeblockhostedappaccesswinrt",
    "categoryId": "1ed81d90-7326-4d0b-8934-b0a8bdddc5ce",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "id": "device_vendor_msft_policy_config_admx_appxruntime_appxruntimeblockhostedappaccesswinrt",
    "description": "\r\n        This policy setting controls whether Universal Windows apps with Windows Runtime API access directly from web content can be launched.\r\n\r\n        If you enable this policy setting, Universal Windows apps which declare Windows Runtime API access in ApplicationContentUriRules section of the manifest cannot be launched; Universal Windows apps which have not declared Windows Runtime API access in the manifest are not affected.\r\n\r\n        If you disable or do not configure this policy setting, all Universal Windows apps can be launched.\r\n\r\n        This policy should not be enabled unless recommended by Microsoft as a security response because it can cause severe app compatibility issues.\r\n      \r\n ",
    "helpText": "",
    "name": "AppxRuntimeBlockHostedAppAccessWinRT",
    "displayName": "Block launching Universal Windows apps with Windows Runtime API access from hosted content.",
    "defaultOptionId": "device_vendor_msft_policy_config_admx_appxruntime_appxruntimeblockhostedappaccesswinrt_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "10.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": "10.0.19041.1202",
        "windowsSkus": [
            "windowsEnterprise",
            "windowsProfessional",
            "windowsEducation",
            "windowsMultiSession",
            "iotEnterprise",
            "windowsCloudN",
            "windows11SE"
        ],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "device_vendor_msft_policy_config_admx_appxruntime_appxruntimeblockhostedappaccesswinrt_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "device_vendor_msft_policy_config_admx_appxruntime_appxruntimeblockhostedappaccesswinrt_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": []
        }
    ]
}