{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "WebUsbAllowDevicesForUrls",
        "Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.",
        "\\Google\\Google Chrome\\Content settings",
        "Administrative Templates\\Google\\Google Chrome\\Content settings",
        "Content settings"
    ],
    "infoUrls": [],
    "baseUri": "./Device/Vendor/MSFT/Policy",
    "offsetUri": "/Config/chromeIntuneV1~Policy~googlechrome~ContentSettings/WebUsbAllowDevicesForUrls",
    "rootDefinitionId": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls",
    "categoryId": "59d29716-55b0-4014-a458-38b408ff9530",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "riskLevel": "low",
    "id": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls",
    "description": "Setting the policy lets you list the URL patterns that specify which sites are automatically granted permission to access a USB device with the given vendor and product IDs. Each item in the list requires both devices and urls fields for the policy to be valid. Each item in the devices field can have a vendor_id and product_id field. Omitting the vendor_id field will create a policy matching any device. Omitting the product_id field will create a policy matching any device with the given vendor ID. A policy which has a product_id field without a vendor_id field is invalid.\r\n\r\nThe USB permission model will grant the specified URL permission to access the USB device as a top-level origin. If embedded frames need to access USB devices, the 'usb' feature-policy header should be used to grant access. The URL must be valid, otherwise the policy is ignored.\r\n\r\nDeprecated: The USB permission model used to support specifying both the requesting and embedding URLs. This is deprecated and only supported for backwards compatiblity in this manner: if both a requesting and embedding URL is specified, then the embedding URL will be granted the permission as top-level origin and the requsting URL will be ignored entirely.\r\n\r\nThis policy overrides DefaultWebUsbGuardSetting, WebUsbAskForUrls, WebUsbBlockedForUrls and the user's preferences.\r\n\r\nThis policy only affects access to USB devices through the WebUSB API. To grant access to USB devices through the Web Serial API see the SerialAllowUsbDevicesForUrls policy.\r\nSee https://cloud.google.com/docs/chrome-enterprise/policies/?policy=WebUsbAllowDevicesForUrls for more information about schema and formatting.\r\n\r\n\r\nExample value:\r\n\r\n[\r\n  {\r\n    \"devices\": [\r\n      {\r\n        \"vendor_id\": 1234,\r\n        \"product_id\": 5678\r\n      }\r\n    ],\r\n    \"urls\": [\r\n      \"https://google.com\"\r\n    ]\r\n  }\r\n]",
    "helpText": "",
    "name": "WebUsbAllowDevicesForUrls",
    "displayName": "Automatically grant permission to these sites to connect to USB devices with the given vendor and product IDs.",
    "defaultOptionId": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "5.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": null,
        "windowsSkus": [],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": [
                {
                    "dependedOnBy": "device_vendor_msft_policy_config_chromeintunev1~policy~googlechrome~contentsettings_webusballowdevicesforurls_webusballowdevicesforurls",
                    "required": true
                }
            ]
        }
    ]
}