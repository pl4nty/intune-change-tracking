{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "AllowCertificatesWithNoEKU",
        "Allow certificates with no extended key usage certificate attribute",
        "\\Windows Components\\Smart Card",
        "Administrative Templates\\Windows Components\\Smart Card",
        "Smart Card"
    ],
    "infoUrls": [
        "https://docs.microsoft.com/windows/client-management/mdm/policy-csp-admx-smartcard#admx-smartcard-allowcertificateswithnoeku"
    ],
    "baseUri": "./Device/Vendor/MSFT/Policy",
    "offsetUri": "/Config/ADMX_Smartcard/AllowCertificatesWithNoEKU",
    "rootDefinitionId": "device_vendor_msft_policy_config_admx_smartcard_allowcertificateswithnoeku",
    "categoryId": "4fc4d2f3-35ee-43ec-a033-ef78da571e70",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "id": "device_vendor_msft_policy_config_admx_smartcard_allowcertificateswithnoeku",
    "description": "This policy setting lets you allow certificates without an Extended Key Usage (EKU) set to be used for logon.\r\n\r\nIn versions of Windows prior to Windows Vista, smart card certificates that are used for logon require an enhanced key usage (EKU) extension with a smart card logon object identifier. This policy setting can be used to modify that restriction.\r\n\r\nIf you enable this policy setting, certificates with the following attributes can also be used to log on with a smart card:\r\n- Certificates with no EKU\r\n- Certificates with an All Purpose EKU\r\n- Certificates with a Client Authentication EKU\r\n\r\nIf you disable or do not configure this policy setting, only certificates that contain the smart card logon object identifier can be used to log on with a smart card.\r\n ",
    "helpText": "",
    "name": "AllowCertificatesWithNoEKU",
    "displayName": "Allow certificates with no extended key usage certificate attribute",
    "defaultOptionId": "device_vendor_msft_policy_config_admx_smartcard_allowcertificateswithnoeku_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "10.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": "10.0.19041.1202",
        "windowsSkus": [
            "windowsEnterprise",
            "windowsProfessional",
            "windowsEducation",
            "holographicForBusiness",
            "windowsMultiSession",
            "iotEnterprise",
            "windowsCloudN",
            "windows11SE",
            "iotEnterpriseSEval"
        ],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "device_vendor_msft_policy_config_admx_smartcard_allowcertificateswithnoeku_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "device_vendor_msft_policy_config_admx_smartcard_allowcertificateswithnoeku_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": []
        }
    ]
}