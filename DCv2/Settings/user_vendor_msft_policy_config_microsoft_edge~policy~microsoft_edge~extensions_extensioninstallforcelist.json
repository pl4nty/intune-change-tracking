{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "ExtensionInstallForcelist",
        "Control which extensions are installed silently",
        "\\Microsoft Edge\\Extensions",
        "Microsoft Edge\\Extensions",
        "Extensions"
    ],
    "infoUrls": [],
    "baseUri": "./User/Vendor/MSFT/Policy",
    "offsetUri": "/Config/microsoft_edge~Policy~microsoft_edge~Extensions/ExtensionInstallForcelist",
    "rootDefinitionId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist",
    "categoryId": "66615d2a-fec9-47f1-8eaf-9813e30cc023",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "riskLevel": "low",
    "id": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist",
    "description": "Specifies extensions that are installed silently, without user interaction, and that the users can't uninstall or disable (\"force-installed\"). All permissions requested by the extensions are granted implicitly, without user interaction, including any additional permissions requested by future versions of the extension. Furthermore, permissions are granted for the enterprise.deviceAttributes and enterprise.platformKeys extension APIs. (These two APIs are only available to extensions that are force-installed.)\r\n\r\nThis policy takes precedence over a potentially conflicting 'ExtensionInstallBlocklist' (Control which extensions cannot be installed) policy. When you take an extension off of the force-installed list it's automatically uninstalled by Microsoft Edge.\r\n\r\nFor Windows devices that aren't joined to a Microsoft Active Directory domain, forced installation is limited to extensions available in the Microsoft Store.\r\n\r\nNote that users can modify the source code of any extension by using Developer Tools, potentially rendering the extension dysfunctional. If this is a concern, set the 'DeveloperToolsAvailability' (Control where developer tools can be used) policy.\r\n\r\nUse the following format to add an extension to the list:\r\n\r\n[extensionID];[updateURL]\r\n\r\n- extensionID - the 32-letter string found on edge://extensions when in developer mode.\r\n\r\n- updateURL (optional) is the address of the Update Manifest XML document for the app or extension, as described at https://go.microsoft.com/fwlink/?linkid=2095043. If you don't set the updateURL, the Microsoft Store update URL is used (currently https://edge.microsoft.com/extensionwebstorebase/v1/crx).  Note that the update URL set in this policy is only used for the initial installation; subsequent updates of the extension use the update URL indicated in the extension's manifest.\r\n\r\nFor example, gggmmkjegpiggikcnhidnjjhmicpibll;https://edge.microsoft.com/extensionwebstorebase/v1/crx installs the Microsoft Online app from the Microsoft Store \"update\" URL. For more information about hosting extensions, see: https://go.microsoft.com/fwlink/?linkid=2095044.\r\n\r\nIf you don't configure this policy, no extensions are installed automatically, and users can uninstall any extension in Microsoft Edge.\r\n\r\nNote that this policy doesn't apply to InPrivate mode.\r\n\r\nExample value:\r\n\r\ngbchcmhmhahfdphkhkmpfmihenigjmpp;https://edge.microsoft.com/extensionwebstorebase/v1/crx\r\nabcdefghijklmnopabcdefghijklmnop",
    "helpText": "",
    "name": "ExtensionInstallForcelist",
    "displayName": "Control which extensions are installed silently (User)",
    "defaultOptionId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "5.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": null,
        "windowsSkus": [],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": [
                {
                    "dependedOnBy": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge~extensions_extensioninstallforcelist_extensioninstallforcelistdesc",
                    "required": true
                }
            ]
        }
    ]
}