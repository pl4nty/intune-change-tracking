{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationSimpleSettingCollectionDefinition",
    "accessTypes": "add,delete,get,replace",
    "keywords": [
        "Impersonate Client",
        "User Rights"
    ],
    "infoUrls": [
        "https://docs.microsoft.com/windows/client-management/mdm/policy-csp-UserRights#userrights-impersonateclient"
    ],
    "baseUri": "./Device/Vendor/MSFT/Policy",
    "offsetUri": "/Config/UserRights/ImpersonateClient",
    "rootDefinitionId": "device_vendor_msft_policy_config_userrights_impersonateclient",
    "categoryId": "9fa124da-acc8-4f4a-a75d-732cd5f91bfd",
    "settingUsage": "configuration",
    "uxBehavior": "default",
    "visibility": "settingsCatalog,template",
    "id": "device_vendor_msft_policy_config_userrights_impersonateclient",
    "description": "Assigning this user right to a user allows programs running on behalf of that user to impersonate a client. Requiring this user right for this kind of impersonation prevents an unauthorized user from convincing a client to connect (for example, by remote procedure call (RPC) or named pipes) to a service that they have created and then impersonating that client, which can elevate the unauthorized user's permissions to administrative or system levels. Caution: Assigning this user right can be a security risk. Only assign this user right to trusted users. Note: By default, services that are started by the Service Control Manager have the built-in Service group added to their access tokens. Component Object Model (COM) servers that are started by the COM infrastructure and that are configured to run under a specific account also have the Service group added to their access tokens. As a result, these services get this user right when they are started. In addition, a user can also impersonate an access token if any of the following conditions exist.  1) The access token that is being impersonated is for this user. 2) The user, in this logon session, created the access token by logging on to the network with explicit credentials. 3) The requested level is less than Impersonate, such as Anonymous or Identify. Because of these factors, users do not usually need this user right. Warning: If you enable this setting, programs that previously had the Impersonate privilege may lose it, and they may not run.",
    "helpText": "",
    "name": "ImpersonateClient",
    "displayName": "Impersonate Client",
    "maximumCount": 600,
    "minimumCount": 0,
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "7.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": "10.0.17134",
        "windowsSkus": [
            "windowsEnterprise",
            "windowsProfessional",
            "windowsEducation",
            "iotEnterprise",
            "windowsCloudN",
            "windows11SE",
            "iotEnterpriseSEval"
        ],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 0,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "valueDefinition": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValueDefinition",
        "format": "none",
        "inputValidationSchema": null,
        "maximumLength": 87516,
        "minimumLength": 0,
        "isSecret": false,
        "fileTypes": []
    },
    "defaultValue": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationStringSettingValue",
        "settingValueTemplateReference": null,
        "value": null
    },
    "dependentOn": [],
    "dependedOnBy": []
}