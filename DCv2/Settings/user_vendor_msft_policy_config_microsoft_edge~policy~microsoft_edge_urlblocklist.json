{
    "@odata.type": "#microsoft.graph.deviceManagementConfigurationChoiceSettingDefinition",
    "accessTypes": "none",
    "keywords": [
        "URLBlocklist",
        "Block access to a list of URLs",
        "\\Microsoft Edge",
        "Microsoft Edge"
    ],
    "infoUrls": [],
    "baseUri": "./User/Vendor/MSFT/Policy",
    "offsetUri": "/Config/microsoft_edge~Policy~microsoft_edge/URLBlocklist",
    "rootDefinitionId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist",
    "categoryId": "a25a7a02-4bac-411b-9d02-10cb3297cb17",
    "settingUsage": "configuration",
    "uxBehavior": "toggle",
    "visibility": "settingsCatalog,template",
    "id": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist",
    "description": "Define a list of sites, based on URL patterns, that are blocked (your users can't load them).\r\n\r\nFormat the URL pattern according to https://go.microsoft.com/fwlink/?linkid=2095322.\r\n\r\nYou can define exceptions in the 'URLAllowlist' (Define a list of allowed URLs) policy. These policies are limited to 1000 entries; subsequent entries are ignored.\r\n\r\nNote that blocking internal 'edge://*' URLs isn't recommended - this may lead to unexpected errors.\r\n\r\nThis policy doesn't prevent the page from updating dynamically through JavaScript. For example, if you block 'contoso.com/abc', users might still be able to visit 'contoso.com' and click on a link to visit 'contoso.com/abc', as long as the page doesn't refresh.\r\n\r\nIf you don't configure this policy, no URLs are blocked.\r\n\r\nExample value:\r\n\r\ncontoso.com\r\nhttps://ssl.server.com\r\nhosting.com/bad_path\r\nhttps://server:8080/path\r\n.exact.hostname.com\r\nfile://*\r\ncustom_scheme:*\r\n*",
    "helpText": "",
    "name": "URLBlocklist",
    "displayName": "Block access to a list of URLs (User)",
    "defaultOptionId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist_0",
    "applicability": {
        "@odata.type": "#microsoft.graph.deviceManagementConfigurationWindowsSettingApplicability",
        "description": null,
        "platform": "windows10",
        "deviceMode": "none",
        "technologies": "mdm",
        "configurationServiceProviderVersion": "5.0",
        "maximumSupportedVersion": null,
        "minimumSupportedVersion": null,
        "windowsSkus": [],
        "requiresAzureAd": false,
        "requiredAzureAdTrustType": "none"
    },
    "occurrence": {
        "minDeviceOccurrence": 1,
        "maxDeviceOccurrence": 1
    },
    "referredSettingInformationList": [],
    "options": [
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist_0",
            "description": null,
            "helpText": null,
            "name": "Disabled",
            "displayName": "Disabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 0
            },
            "dependentOn": [],
            "dependedOnBy": []
        },
        {
            "itemId": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist_1",
            "description": null,
            "helpText": null,
            "name": "Enabled",
            "displayName": "Enabled",
            "optionValue": {
                "@odata.type": "#microsoft.graph.deviceManagementConfigurationIntegerSettingValue",
                "settingValueTemplateReference": null,
                "value": 1
            },
            "dependentOn": [],
            "dependedOnBy": [
                {
                    "dependedOnBy": "user_vendor_msft_policy_config_microsoft_edge~policy~microsoft_edge_urlblocklist_urlblocklistdesc",
                    "required": true
                }
            ]
        }
    ]
}